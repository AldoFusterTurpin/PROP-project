package vista;

import java.awt.Color;
import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.JColorChooser;
import javax.swing.JOptionPane;

public class VistaColorChoice extends javax.swing.JDialog {
    /**
	 * Llistat de colors
	 */
    private static ArrayList<String> llistaJCombo=new ArrayList<>(0);
    /**
	 * Color seleccionat
	 */
    private static String selectedColor;
    /**
	 * Numero del color seleccionat
	 */
    private static int id;
    /**
	 * VistaCrearTaulell que l'ha creat
	 */
    private static VistaCrearTaulell pare;

	/**
	 * Indica si s'ha definit el fons
	 */
    private boolean setB=false;
    /**
	 * Fons
	 */
    private ImagePanel background;

    /**
	 * Defineix el pare
	 * @param v Es el que s'assignara a pare
	 */
    public static void setParent(VistaCrearTaulell v){
        pare=v;
        id=0;
        llistaJCombo=pare.getColorList();
        selectedColor=llistaJCombo.get(0);
    }

    /**
	 * Posa la imatge al boto de "+"
	 */
   private void initPlus(){
       moreB.setLayout(null);
       ImagePanel aux = new ImagePanel();
       aux.setImg("/vista/plus.png");
       aux.setFocusable(false);
       aux.setName("more");
       aux.setOpaque(true);
       aux.setSize(47,47);
       aux.setLocation(5,5);
       moreB.add(aux);

   }

	/**
	 * Funcio auxiliar per crear un ImagePanel a partir de uns valors
	 * @param w amplada del panell a crear
	 * @param h al√ßada del panell a crear
	 * @param path string que indica la ubicacio de la imatge
	 * @param posX la posicio en X on es dibuixara
	 * @param posY la posicio en Y on es dibuixara
	 * @param nam nom del panell
	 * @return El ImagePanel configurat
	 */
   private ImagePanel drawImage(int w, int h, String path, int posX, int posY, String name){
        ImagePanel aux = new ImagePanel();
        aux.setImg(path);
        aux.setFocusable(false);
        aux.setName(name);
        aux.setOpaque(true);
        aux.setSize(w,h);
        aux.setLocation(posX,posY);
        return aux;
    }
	/**
	 * Defineix el fons
	 */
    private void setBackground(){
            if(!setB){
                background = drawImage( this.getWidth(), this.getHeight(), "/vista/main_menu.jpg", 0, 0, "background");
                this.add(background);
                setB=true;
            }
            else {
                this.remove(background);
                background=drawImage( this.getWidth(), this.getHeight(), "/vista/main_menu.jpg", 0, 0, "background");
                background.repaint();
                this.add(background);

            }
        }
	/**
	 * Crea la llista de colors
	 */
    private void updateColorList(){
        ArrayList<String> al= llistaJCombo;
        String[] s = new String[al.size()];
        for(int i=0;i<al.size();++i) s[i]="Color "+(i+1);
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(s));
    }

	/**
 	* Pinta el color seleccionat de la llista
	*/
	private void updateSelectedColor(){
            showColor.removeAll();
            showColor.repaint();
            showColor.setLayout(null);
            if(selectedColor.equals("*")){
                ImagePanel aux = new ImagePanel();
                aux.setImg("/vista/empty.png");
                aux.setFocusable(false);
                aux.setName("select");
                aux.setOpaque(true);
                aux.setSize(90,90);
                aux.setLocation(0,0);
                showColor.add(aux);
            } else {
                javax.swing.JLabel aux = new javax.swing.JLabel();
                aux.setBackground(Color.decode(selectedColor));
                aux.setFocusable(false);
                aux.setName("select");
                aux.setOpaque(true);
                aux.setSize(90,90);
                aux.setLocation(0,0);
                aux.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                showColor.add(aux);
            }

            llistaJCombo.set(id, selectedColor);
    }

    /**
     * Creates new form VistaColorChoice
     */
    public VistaColorChoice(java.awt.Frame parent, boolean modal) {
      super(parent, modal);
        initComponents();
        setBackground();
        updateSelectedColor();
        updateColorList();
        initPlus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        RedB = new javax.swing.JButton();
        GreenB = new javax.swing.JButton();
        BlueB = new javax.swing.JButton();
        YellowB = new javax.swing.JButton();
        MagentB = new javax.swing.JButton();
        VioletB = new javax.swing.JButton();
        CianB = new javax.swing.JButton();
        OrangeB = new javax.swing.JButton();
        TurqB = new javax.swing.JButton();
        BrownB = new javax.swing.JButton();
        WhiteB = new javax.swing.JButton();
        moreB = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        showColor = new javax.swing.JPanel();
        confirmB = new javax.swing.JButton();
        retB = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(0, 143, 255));
        jPanel1.setOpaque(false);

        RedB.setBackground(new java.awt.Color(255, 0, 0));
        RedB.setForeground(new java.awt.Color(255, 0, 0));
        RedB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RedBActionPerformed(evt);
            }
        });

        GreenB.setBackground(new java.awt.Color(0, 255, 0));
        GreenB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GreenBActionPerformed(evt);
            }
        });

        BlueB.setBackground(new java.awt.Color(0, 0, 255));
        BlueB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BlueBActionPerformed(evt);
            }
        });

        YellowB.setBackground(new java.awt.Color(255, 255, 0));
        YellowB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                YellowBActionPerformed(evt);
            }
        });

        MagentB.setBackground(new java.awt.Color(255, 0, 255));
        MagentB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MagentBActionPerformed(evt);
            }
        });

        VioletB.setBackground(new java.awt.Color(128, 0, 253));
        VioletB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VioletBActionPerformed(evt);
            }
        });

        CianB.setBackground(new java.awt.Color(0, 255, 255));
        CianB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CianBActionPerformed(evt);
            }
        });

        OrangeB.setBackground(new java.awt.Color(255, 128, 0));
        OrangeB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OrangeBActionPerformed(evt);
            }
        });

        TurqB.setBackground(new java.awt.Color(0, 255, 128));
        TurqB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TurqBActionPerformed(evt);
            }
        });

        BrownB.setBackground(new java.awt.Color(135, 75, 0));
        BrownB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BrownBActionPerformed(evt);
            }
        });

        WhiteB.setBackground(new java.awt.Color(255, 255, 255));
        WhiteB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WhiteBActionPerformed(evt);
            }
        });

        moreB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moreBActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        showColor.setDoubleBuffered(false);
        showColor.setMaximumSize(new java.awt.Dimension(90, 90));
        showColor.setMinimumSize(new java.awt.Dimension(90, 90));
        showColor.setPreferredSize(new java.awt.Dimension(90, 90));

        javax.swing.GroupLayout showColorLayout = new javax.swing.GroupLayout(showColor);
        showColor.setLayout(showColorLayout);
        showColorLayout.setHorizontalGroup(
            showColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 90, Short.MAX_VALUE)
        );
        showColorLayout.setVerticalGroup(
            showColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 90, Short.MAX_VALUE)
        );

        confirmB.setText("Confirm");
        confirmB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmBActionPerformed(evt);
            }
        });

        retB.setText("Cancel");
        retB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(RedB, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(GreenB, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(BlueB, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(YellowB, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(MagentB, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(CianB, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(OrangeB, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(TurqB, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(VioletB, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(BrownB, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(WhiteB, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(moreB, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(showColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(retB)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(confirmB, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(YellowB, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BlueB, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GreenB, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RedB, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(MagentB, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CianB, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(OrangeB, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TurqB, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(VioletB, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BrownB, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(WhiteB, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(moreB, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(retB))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(showColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(123, 123, 123)
                .addComponent(confirmB, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(26, 26, 26))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(40, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

	/**
	 * En premer el boto del color vermell atribueix aquest color al seleccionat
	 */
    private void RedBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RedBActionPerformed
        Color c=RedB.getBackground();
        selectedColor=String.format("#%02x%02x%02x", c.getRed(), c.getGreen(), c.getBlue());
        updateSelectedColor();
    }//GEN-LAST:event_RedBActionPerformed

	/**
	 * En premer el boto del color verd atribueix aquest color al seleccionat
	 */
    private void GreenBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GreenBActionPerformed
        Color c=GreenB.getBackground();
        selectedColor=String.format("#%02x%02x%02x", c.getRed(), c.getGreen(), c.getBlue());
        updateSelectedColor();
    }//GEN-LAST:event_GreenBActionPerformed

	/**
	 * En premer el boto del color blau atribueix aquest color al seleccionat
	 */
    private void BlueBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BlueBActionPerformed
        Color c=BlueB.getBackground();
        selectedColor=String.format("#%02x%02x%02x", c.getRed(), c.getGreen(), c.getBlue());
        updateSelectedColor();
    }//GEN-LAST:event_BlueBActionPerformed

	/**
	 * En premer el boto del color groc atribueix aquest color al seleccionat
	 */
    private void YellowBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_YellowBActionPerformed
        Color c=YellowB.getBackground();
        selectedColor=String.format("#%02x%02x%02x", c.getRed(), c.getGreen(), c.getBlue());
        updateSelectedColor();
    }//GEN-LAST:event_YellowBActionPerformed

	/**
	 * En premer el boto del color magenta atribueix aquest color al seleccionat
	 */
    private void MagentBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MagentBActionPerformed
        Color c=MagentB.getBackground();
        selectedColor=String.format("#%02x%02x%02x", c.getRed(), c.getGreen(), c.getBlue());
        updateSelectedColor();
    }//GEN-LAST:event_MagentBActionPerformed

	/**
	 * En premer el boto del color cian atribueix aquest color al seleccionat
	 */
    private void CianBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CianBActionPerformed
        Color c=CianB.getBackground();
        selectedColor=String.format("#%02x%02x%02x", c.getRed(), c.getGreen(), c.getBlue());
        updateSelectedColor();
    }//GEN-LAST:event_CianBActionPerformed

	/**
	 * En premer el boto del color tronja atribueix aquest color al seleccionat
	 */
    private void OrangeBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OrangeBActionPerformed
        Color c=OrangeB.getBackground();
        selectedColor=String.format("#%02x%02x%02x", c.getRed(), c.getGreen(), c.getBlue());
        updateSelectedColor();
    }//GEN-LAST:event_OrangeBActionPerformed

	/**
	 * En premer el boto del color turquesa atribueix aquest color al seleccionat
	 */
    private void TurqBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TurqBActionPerformed
        Color c=TurqB.getBackground();
        selectedColor=String.format("#%02x%02x%02x", c.getRed(), c.getGreen(), c.getBlue());
        updateSelectedColor();
    }//GEN-LAST:event_TurqBActionPerformed

	/**
	 * En premer el boto del color violeta atribueix aquest color al seleccionat
	 */
    private void VioletBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VioletBActionPerformed
        Color c=VioletB.getBackground();
        selectedColor=String.format("#%02x%02x%02x", c.getRed(), c.getGreen(), c.getBlue());
        updateSelectedColor();
    }//GEN-LAST:event_VioletBActionPerformed

	/**
	 * En premer el boto del color marro atribueix aquest color al seleccionat
	 */
    private void BrownBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BrownBActionPerformed
        Color c=BrownB.getBackground();
        selectedColor=String.format("#%02x%02x%02x", c.getRed(), c.getGreen(), c.getBlue());
        updateSelectedColor();
    }//GEN-LAST:event_BrownBActionPerformed

	/**
	 * En premer el boto del color balanc atribueix aquest color al seleccionat
	 */
    private void WhiteBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WhiteBActionPerformed
        Color c=WhiteB.getBackground();
        selectedColor=String.format("#%02x%02x%02x", c.getRed(), c.getGreen(), c.getBlue());
        updateSelectedColor();
    }//GEN-LAST:event_WhiteBActionPerformed

	/**
	 * En premer el boto de "+" obre un dialeg amb un selector de colors i atribueix
	 * al color seleccionat el valor desitjat
	 */
    private void moreBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moreBActionPerformed
        Color c = JColorChooser.showDialog(this,"Choose new color",Color.darkGray);
        if(c!=null){
			selectedColor=String.format("#%02x%02x%02x", c.getRed(), c.getGreen(), c.getBlue());
        	updateSelectedColor();
		}
    }//GEN-LAST:event_moreBActionPerformed


	/**
	 * En seleccionar un color de la llista el posa com a seleccionat
	 */
    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        id=jComboBox1.getSelectedIndex();
        selectedColor=llistaJCombo.get(id);
        updateSelectedColor();

    }//GEN-LAST:event_jComboBox1ActionPerformed

	/**
	 * En premer el boto de tornar tanca el dialeg
	 */
    private void retBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retBActionPerformed
        dispose();
    }//GEN-LAST:event_retBActionPerformed

	/**
	 * Confirma les modificacions en premer el boto de confirmar, si la llista conte colors indefinits o
	 * repetits mostra un misatge d'error
	 */
    private void confirmBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmBActionPerformed
        boolean rep=false;
        boolean empty = false;
        ArrayList<String> al = new ArrayList(llistaJCombo);
        String s="*";
        int i=0;
        while(al.size()>0 && !rep && !empty){
            s=al.remove(0);
            if(s.equals("*")) empty=true;
            if(al.contains(s)) rep=true;
            ++i;
        }
        if(empty) JOptionPane.showMessageDialog(null, "There can't be undefined colors. Color "+i+" is unset", "Alert", JOptionPane.ERROR_MESSAGE);
        else if(rep){
            int j;
            for(j=i; j<llistaJCombo.size(); ++j) if(llistaJCombo.get(j).equals(s)) break;
            JOptionPane.showMessageDialog(null, "The board can't contain repeated colors. Colors "+Math.min((j+1),i)+" and "+Math.max(i,(j+1))+" are the same", "Alert", JOptionPane.ERROR_MESSAGE);
        }
        else{
            pare.setColorList(llistaJCombo);
            dispose();
        }
    }//GEN-LAST:event_confirmBActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feels */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VistaColorChoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VistaColorChoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VistaColorChoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VistaColorChoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
		VistaColorChoice dialog = new VistaColorChoice(new javax.swing.JFrame(), true);
		dialog.addWindowListener(new java.awt.event.WindowAdapter() {
		});
		dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BlueB;
    private javax.swing.JButton BrownB;
    private javax.swing.JButton CianB;
    private javax.swing.JButton GreenB;
    private javax.swing.JButton MagentB;
    private javax.swing.JButton OrangeB;
    private javax.swing.JButton RedB;
    private javax.swing.JButton TurqB;
    private javax.swing.JButton VioletB;
    private javax.swing.JButton WhiteB;
    private javax.swing.JButton YellowB;
    private javax.swing.JButton confirmB;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton moreB;
    private javax.swing.JButton retB;
    private javax.swing.JPanel showColor;
    // End of variables declaration//GEN-END:variables
}
