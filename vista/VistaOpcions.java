package vista;

import domini.CtrlDomini;
import domini.ModelTaulell;
import domini.Opcions;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

public class VistaOpcions extends javax.swing.JFrame {
    private CtrlDomini ctrlDomini;

    private boolean permetBuit;
    private boolean permetDuplicats;
    private boolean maquina_vs_maquina; //"modo spectador"
    private boolean rol_escollit;
    private boolean taulell_escollit;

    private boolean jugador_codemaker;//es refereix al "jugador" humà que està jugant
    private ModelTaulell modelTaulell;
    private String username; //si la vista reb un username == null vol dir que
                             //s'està cridant la vista desde "partida convidat"
                             //si la vista reb username != null vol dir que la vista
                             //s'està cridant desde VistaUsuariLogejat i per tant
                             //les opcions les està definint un usuari registrat
                             //aquesta distincio es per quan s'hagi de decidir codemaker i codebraker

    /**
     * Creates new form VistaOpcions
     */
    public VistaOpcions(CtrlDomini ctrlDomini, String username) {
        initComponents();

        this.ctrlDomini = ctrlDomini;

        permetBuit = false;
        permetDuplicats = false;
        maquina_vs_maquina = false;
        rol_escollit = false;
        taulell_escollit = false;
        jugador_codemaker = false;

        this.username = username;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jCheckBox3 = new javax.swing.JCheckBox();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(0, 153, 255));
        setResizable(false);
        setSize(new java.awt.Dimension(645, 530));

        jPanel1.setBackground(new java.awt.Color(0, 153, 255));
        jPanel1.setMaximumSize(new java.awt.Dimension(645, 530));
        jPanel1.setPreferredSize(new java.awt.Dimension(645, 530));
        jPanel1.setSize(new java.awt.Dimension(645, 530));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 3, 20)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Options");

        jCheckBox1.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jCheckBox1.setForeground(new java.awt.Color(255, 255, 255));
        jCheckBox1.setText("Allow empty spaces in secret code");
        jCheckBox1.setActionCommand("");

        jCheckBox2.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jCheckBox2.setForeground(new java.awt.Color(255, 255, 255));
        jCheckBox2.setText("Allow duplicates in secret code");
        jCheckBox2.setActionCommand("");

        jButton1.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jButton1.setText("Next");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jCheckBox3.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jCheckBox3.setForeground(new java.awt.Color(255, 255, 255));
        jCheckBox3.setText("Spectator mode(see example game)");

        jButton3.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jButton3.setText("Choose your rol");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jButton4.setText("Choose board");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("If spectator mode NOT selected:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(31, 31, 31))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(270, 270, 270))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(131, 131, 131)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCheckBox3)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(243, 243, 243)
                        .addComponent(jButton4))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(236, 236, 236)
                        .addComponent(jButton3)))
                .addContainerGap(129, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton1, jButton2});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jCheckBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jCheckBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton4)
                .addGap(21, 21, 21)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 73, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton1))
                .addGap(24, 24, 24))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jButton1, jButton2});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    //botó 'cancel' apretat
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    //botó 'Next' apretat
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        permetBuit = jCheckBox1.isSelected();
        permetDuplicats = jCheckBox2.isSelected();
        maquina_vs_maquina = jCheckBox3.isSelected();
        ctrlDomini.setOpcions(new Opcions(permetBuit, permetDuplicats));

        if (! taulell_escollit) JOptionPane.showMessageDialog(null, "Please choose one board", "Error", JOptionPane.ERROR_MESSAGE);
        else {
            if (! maquina_vs_maquina) {
                if (! rol_escollit) JOptionPane.showMessageDialog(null, "Please choose one rol", "Error", JOptionPane.ERROR_MESSAGE);
                else {
                    if (jugador_codemaker) {
                        try {
                            //si la partida la inicia el convidat;criteri propi, es com es crida aquesta vista desde VistaMenuPrincipal
                            if (username == null) ctrlDomini.setCodemakerConvidat();
                            //si el que vol jugar es un jugador registrat(s'ha cridat aquesta vista desde VistaUsuariLogejat)
                            else ctrlDomini.setCodemaker(ctrlDomini.obtenirJugador(ctrlDomini.obtenirIdDeUsername(username)));
                            ctrlDomini.setCodebreakerIA();
                            ctrlDomini.jugarPartida(modelTaulell);
                            //ctrlDomini.jugarPartida(modelTaulell, new Jugador("hola", true), new Jugador("hola2", false)); PROVA
                            dispose();
                        } catch (Exception ex) {
                            Logger.getLogger(VistaOpcions.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                    else { //jugador codebreaker:
                        try {
                            //si la partida la inicia el convidat;criteri propi, es com es crida aquesta vista desde VistaMenuPrincipal
                            if (username == null) ctrlDomini.setCodebreakerConvidat();
                            //si el que vol jugar es un jugador registrat(s'ha cridat aquesta vista desde VistaUsuariLogejat)
                            else ctrlDomini.setCodebreaker(ctrlDomini.obtenirJugador(ctrlDomini.obtenirIdDeUsername(username)));
                            ctrlDomini.setCodemakerIA();
                            ctrlDomini.jugarPartida(modelTaulell);
                            dispose();
                        } catch (Exception ex) {
                            Logger.getLogger(VistaOpcions.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                }
            }
            else {
                try {
                //si maquina_vs_maquina:
                ctrlDomini.setCodebreakerIA();
                ctrlDomini.setCodemakerIA();
                ctrlDomini.jugarPartida(modelTaulell);
                dispose();
                } catch (Exception ex) {
                    Logger.getLogger(VistaOpcions.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        String[] opcions = {
            "Codebraker",
            "Codemaker"
        };

        String input = (String) JOptionPane.showInputDialog(null, //pare
                                                            "Select your player rol", //títol del diàleg
                                                            "Select one", ////missatge que es mostra
                                                            JOptionPane.QUESTION_MESSAGE,
                                                            null, //icona predeterminada
                                                            opcions, //les opcions que es mostrarán
                                                            opcions[0]); //l'opció inicial
        if (opcions != null) {
            rol_escollit = true;
            jugador_codemaker = input.equals(opcions[1]);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    public void setModelTaulell(ModelTaulell mt){
        modelTaulell=new ModelTaulell(mt);
        taulell_escollit = true;
    }

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        VistaSelectBoard.main(null, this, ctrlDomini);

    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[], CtrlDomini ctrlDomini, String username) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VistaOpcions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VistaOpcions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VistaOpcions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VistaOpcions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VistaOpcions(ctrlDomini, username).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
